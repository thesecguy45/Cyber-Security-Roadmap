# 1. Core Foundations

## 1.1 🖥️ Computer Hardware & Architecture
- CPU, Memory, Storage basics  
- Instruction cycles & registers  
- BIOS/UEFI & boot process  
- Virtualization basics (VMs, Hypervisors)  
- Hardware security (TPM, Secure Boot, Firmware attacks)  

## 1.2 🌐 Networking Fundamentals
### OSI Model
- **Layer 7 – Application** → APIs, HTTP, DNS, FTP, SMTP, web protocols  
- **Layer 6 – Presentation** → data formatting, encryption, compression (TLS/SSL, JPEG, ASCII, etc.)  
- **Layer 5 – Session** → connection establishment, authentication, session teardown (NetBIOS, RPC)  
- **Layer 4 – Transport** → TCP, UDP, ports, sessions, error recovery  
- **Layer 3 – Network** → IP addressing, routing, ICMP, fragmentation  
- **Layer 2 – Data Link** → MAC addressing, ARP, Ethernet, frame synchronization, error detection  
- **Layer 1 – Physical** → cables, fiber, Wi-Fi, radio signals, bit transmission  

### Core Concepts
- 🔥 **Firewalls** → packet filtering, rules for inbound/outbound  
- 🌍 **NAT** → IPv4 vs IPv6, address translation, port forwarding  
- 📡 **DNS** → UDP/53, TCP fallback, caching, sinkholes, exfiltration, reverse lookups  
- 🏷️ **DHCP** → dynamic IP assignment, leases, spoofing attacks  
- 🔑 **VPNs & Tunneling** → IPSec, SSL VPN, GRE, split tunneling  
- 🪞 **Proxies** → forward vs reverse, transparent vs explicit  
- 🛣️ **Routing Protocols** → RIP, OSPF, BGP basics  
- 🔌 **Switching Concepts** → VLANs, trunking, STP  

## 1.3 🛡️ Computer & Security Fundamentals
- **CIA Triad** (Confidentiality, Integrity, Availability)  
- **Security Models** (Bell-LaPadula, Biba, Zero Trust basics)  
- **Types of Threats** (malware, insider, supply chain, APTs)  
- **Risk Management** (threats, vulnerabilities, likelihood, impact)  
- **Common Security Controls** (preventive, detective, corrective)  

## 1.4 💻 Programming & Algorithms
- **Core Programming Concepts** (variables, loops, functions, data structures)  
- **Popular Languages** (Python, C, JavaScript, Go – focus on security scripting)  
- **Algorithms** (searching, sorting, hashing)  
- **Secure Coding** basics (buffer overflow prevention, input validation)  

## 1.5 ⚙️ Operating Systems Concepts
- **Process Management** (threads, scheduling, context switching)  
- **Memory Management** (heap, stack, paging, segmentation)  
- **File Systems** (NTFS, ext4, FAT32, permissions)  
- **System Calls & APIs** (user vs kernel mode)  
- **Windows Internals** (registry, services, DLLs)  
- **Linux Internals** (systemd, daemons, permissions, SELinux/AppArmor)  

## 1.6 🐧 Linux & Scripting
- **Linux Basics** (shell, filesystem hierarchy, permissions)  
- **Essential Commands** (grep, awk, sed, netstat, ip, systemctl)  
- **Bash Scripting** (loops, conditionals, automation tasks)  
- **Python Scripting** (networking, parsing, automation)  
- **PowerShell Basics** (for Windows security & automation)  
